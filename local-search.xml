<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>存储系统的接口和协议</title>
    <link href="/github.io/2025/04/23/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%8D%8F%E8%AE%AE/"/>
    <url>/github.io/2025/04/23/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="1、物理接口：数据的“高速公路”"><a href="#1、物理接口：数据的“高速公路”" class="headerlink" title="1、物理接口：数据的“高速公路”"></a>1、物理接口：数据的“高速公路”</h2><ol><li><h4 id="SATA接口"><a href="#SATA接口" class="headerlink" title="SATA接口"></a>SATA接口</h4><p> 物理形态：7针L型连接器（2.5英寸设备）<br>协议绑定：仅支持SATA协议（AHCI指令集）<br> 带宽瓶颈：SATA 3.0理论6Gbps，机械臂寻址延迟高</p></li><li><h4 id="PCIe接口"><a href="#PCIe接口" class="headerlink" title="PCIe接口"></a>PCIe接口</h4><p>物理形态：PCIe插槽（x1&#x2F;x4&#x2F;x8通道）<br>协议自由：纯通道资源，可承载NVMe、AHCI、RAID等协议<br>带宽计算：PCIe 3.0 x4 ≈ 4GB&#x2F;s，PCIe 4.0 x4 ≈ 8GB&#x2F;s</p></li><li><h4 id="M-2接口"><a href="#M-2接口" class="headerlink" title="M.2接口"></a>M.2接口</h4><p>物理形态：M.2 Key设计（B Key&#x2F;M Key）<br>B Key（Socket 2）：支持SATA&#x2F;PCIe x2<br>M Key（Socket 3）：支持PCIe x4（NVMe）<br>核心特点：通过接口形态区分协议类型（见下图）</p></li></ol><h2 id="2、传输协议：数据的“交通规则”"><a href="#2、传输协议：数据的“交通规则”" class="headerlink" title="2、传输协议：数据的“交通规则”"></a>2、传输协议：数据的“交通规则”</h2><ol><li><h4 id="SATA协议"><a href="#SATA协议" class="headerlink" title="SATA协议"></a>SATA协议</h4><p>核心局限：基于AHCI指令集，单队列深度32，无法发挥多核CPU性能<br>Linux驱动：<code>ahci</code>模块（设备节点<code>/dev/sd*</code>）<br>典型场景：工控设备的低速日志存储（如RS485数据记录）</p></li><li><h4 id="PCIe协议"><a href="#PCIe协议" class="headerlink" title="PCIe协议"></a>PCIe协议</h4><p>本质定位：物理层和数据链路层规范（非存储专用协议）<br>存储应用：需配合上层协议（如NVMe）实现存储功能</p></li><li><h4 id="NVMe协议"><a href="#NVMe协议" class="headerlink" title="NVMe协议"></a>NVMe协议</h4><p>设计理念：为PCIe SSD定制的轻量级协议，支持64K队列深度<br>性能优势：4K随机读写性能可达SATA SSD的5倍以上<br>Linux驱动：<code>nvme</code>模块（设备节点<code>/dev/nvme*</code>）</p></li></ol><h2 id="3、PCI-E"><a href="#3、PCI-E" class="headerlink" title="3、PCI-E"></a>3、PCI-E</h2><p>PCI-Express(peripheral component interconnect express)是一种高速串行计算机扩展总线标准，是由英特尔在2001年提出的，旨在替代旧的PCI，PCI-X和AGP总线标准。</p><h4 id="（1）PCI-E-x16"><a href="#（1）PCI-E-x16" class="headerlink" title="（1）PCI-E x16"></a>（1）PCI-E x16</h4><p>插槽全长89mm，有164根针脚，主要用于显卡以及RAID阵列卡等。一般靠主板外侧端有一卡口，将16x分为前后两组，较短的插槽有22根针脚，主要用于供电，较长的插槽142根，主要用于数据传输。</p><h4 id="（2）PCI-E-x8"><a href="#（2）PCI-E-x8" class="headerlink" title="（2）PCI-E x8"></a>（2）PCI-E x8</h4><p>插槽全长56mm，有98根针脚，与PCI-E x16比较，主要是数据针脚减少至76根，短的供电针脚仍然是22针脚。</p><h4 id="（3）PCI-E-x4"><a href="#（3）PCI-E-x4" class="headerlink" title="（3）PCI-E x4"></a>（3）PCI-E x4</h4><p>插槽的长度为39mm，是在PCI-E x16插槽的基础上，以减少数据针脚的方式实现，主要用于PCI-E SSD固态硬盘，或者通过转接卡安装的M.2 SSD固态硬盘。</p><h4 id="（4）PCI-E-x1"><a href="#（4）PCI-E-x1" class="headerlink" title="（4）PCI-E x1"></a>（4）PCI-E x1</h4><p>插槽的长度是最短的，仅有25mm，相比PCI-E x16插槽，其数据针脚是大幅度减少至14个。PCI-E x1主要用途是独立网卡、独立声卡、USB 3.0&#x2F;3.1扩展卡等，是用来替代原来的PCI设备的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>存储系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RAID简述</title>
    <link href="/github.io/2025/03/31/RAID%E7%AE%80%E8%BF%B0/"/>
    <url>/github.io/2025/03/31/RAID%E7%AE%80%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<p>RAID 是一种用于提高数据存储性能和可靠性的技术，英文全称：<code>Redundant Array of Independent Disks</code>，中文意思：独立磁盘冗余阵列。RAID 系统由两个或多个并行工作的驱动器组成，这些可以是机械硬盘或者固态硬盘。RAID 可分为软件 RAID 和硬件 RAID，在软件 RAID 中，内存架构由操作系统管理，在硬件 RAID 的情况下，磁盘内有一个专用控制器和处理器来管理内存。</p><h2 id="1-基本-RAID-级别"><a href="#1-基本-RAID-级别" class="headerlink" title="1. 基本 RAID 级别"></a>1. 基本 RAID 级别</h2><ul><li><h4 id="RAID-0"><a href="#RAID-0" class="headerlink" title="RAID 0"></a>RAID 0</h4></li></ul><p>读写速度≈单盘速度×N（N为硬盘数），但在数据安全方面，任意一盘故障，数据全毁，仅适合临时渲染缓存素材，不适合永久存储重要资料。</p><ul><li><h4 id="RAID-1"><a href="#RAID-1" class="headerlink" title="RAID 1"></a>RAID 1</h4></li></ul><p>支持单盘故障无损恢复，重建速度最快，但代价就是总硬盘容量利用率仅50%左右，两盘当一盘使用来确保数据安全。</p><ul><li><h4 id="RAID-5"><a href="#RAID-5" class="headerlink" title="RAID 5"></a>RAID 5</h4></li></ul><p>允许单盘故障，容量利用率≈(N-1)&#x2F;N，数据有冗余保障但恢复难度不低，需专用校验算法。</p><ul><li><h4 id="RAID-6"><a href="#RAID-6" class="headerlink" title="RAID 6"></a>RAID 6</h4></li></ul><p>RAID 6 使用双奇偶校验块来实现比 RAID 5 更好的数据冗余，这增加了阵列中最多两个驱动器故障的容错能力。每个磁盘都有两个奇偶校验块，它们存储在阵列中的不同磁盘上。</p><hr><h2 id="2-跨区-RAID-级别"><a href="#2-跨区-RAID-级别" class="headerlink" title="2. 跨区 RAID 级别"></a>2. 跨区 RAID 级别</h2><ul><li><h4 id="RAID-10"><a href="#RAID-10" class="headerlink" title="RAID 10"></a>RAID 10</h4></li></ul><p>相当于RAID 1+RAID 0嵌套，允许半数硬盘同时故障 <strong>，</strong>适合内容创作&#x2F;金融&#x2F;医疗等重要行业核心数据存储，不过成本高昂。需至少4盘组成。</p><ul><li><h4 id="RAID-50"><a href="#RAID-50" class="headerlink" title="RAID 50"></a>RAID 50</h4></li></ul><p>RAID 50 由两个或多个RAID 5阵列组成，形成类似RAID 0的条带化阵列。与配置相同数量的RAID 5相比，它提供了更高的访问性能和更强的数据保护性能。</p><ul><li><h4 id="RAID-60"><a href="#RAID-60" class="headerlink" title="RAID 60"></a>RAID 60</h4></li></ul><p>RAID 60有时称为 RAID 6+RAID 0，即将多个 RAID 6 集（带双奇偶校验的条带化）与 RAID 0（条带化）结合在一起。双奇偶校验允许每个 RAID 6 阵列中的两个驱动器发生故障，而条带化可提高容量和性能，而无需向每个 RAID 6 阵列添加驱动器。</p><hr><h2 id="3-RAID级别比较"><a href="#3-RAID级别比较" class="headerlink" title="3. RAID级别比较"></a>3. RAID级别比较</h2><table><thead><tr><th align="center">特征</th><th align="center">RAID 0</th><th align="center">RAID 1</th><th align="center">RAID 5</th><th align="center">RAID 6</th><th align="center">RAID 10</th><th align="center">RAID 50</th><th align="center">RAID 60</th></tr></thead><tbody><tr><td align="center">最小驱动器</td><td align="center">1个</td><td align="center">2个</td><td align="center">3个</td><td align="center">4个</td><td align="center">4个</td><td align="center">6个</td><td align="center">8个</td></tr><tr><td align="center">最大驱动器</td><td align="center">32</td><td align="center">2个</td><td align="center">32</td><td align="center">32</td><td align="center">16</td><td align="center">192</td><td align="center">192</td></tr><tr><td align="center">对硬盘故障的容忍度</td><td align="center">没有任何</td><td align="center">1 个驱动器</td><td align="center">1 个驱动器</td><td align="center">2个驱动器</td><td align="center">每个跨度 1 个驱动器</td><td align="center">每个跨度 1 个驱动器</td><td align="center">每个跨度 2 个驱动器</td></tr><tr><td align="center">重建时间</td><td align="center">没有任何</td><td align="center">快速地</td><td align="center">减缓</td><td align="center">缓慢</td><td align="center">快速地</td><td align="center">缓慢</td><td align="center">缓慢</td></tr><tr><td align="center">读写性能</td><td align="center">出色的</td><td align="center">非常好</td><td align="center">出色的</td><td align="center">出色的</td><td align="center">非常好</td><td align="center">出色的</td><td align="center">出色的</td></tr><tr><td align="center">阵列性能下降</td><td align="center">没有任何</td><td align="center">非常好</td><td align="center">满意的</td><td align="center">满意的</td><td align="center">非常好</td><td align="center">好的</td><td align="center">好的</td></tr><tr><td align="center">容量开销</td><td align="center">没有任何</td><td align="center">一半</td><td align="center">1 个驱动器</td><td align="center">2个驱动器</td><td align="center">一半</td><td align="center">每个跨度 1 个驱动器</td><td align="center">每个跨度 2 个驱动器</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>存储系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32的发展史</title>
    <link href="/github.io/2025/03/30/STM32%E7%9A%84%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
    <url>/github.io/2025/03/30/STM32%E7%9A%84%E5%8F%91%E5%B1%95%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1-STM32的诞生：2007年"><a href="#1-STM32的诞生：2007年" class="headerlink" title="1. STM32的诞生：2007年"></a>1. STM32的诞生：2007年</h2><h4 id="划时代芯片：STM32F1系列"><a href="#划时代芯片：STM32F1系列" class="headerlink" title="划时代芯片：STM32F1系列"></a>划时代芯片：STM32F1系列</h4><ul><li>基于ARM Cortex-M3内核，主频72MHz，集成128KB Flash和20KB RAM，支持USB、CAN总线等外设。</li></ul><p><strong>市场意义：</strong>2007年前，单片机市场以8位机为主，STM32F1以“高性能+低成本”迅速占领中高端市场，成为工程师首选。首款性价比极高的32位MCU，打破了8位机（如8051）和传统16位机（如MSP430）的垄断，推动工业控制、医疗设备升级。</p><hr><h2 id="2-细分市场与生态构建：2009-2014年"><a href="#2-细分市场与生态构建：2009-2014年" class="headerlink" title="2. 细分市场与生态构建：2009-2014年"></a>2. 细分市场与生态构建：2009-2014年</h2><h4 id="低功耗先锋：STM32L1系列（2009）"><a href="#低功耗先锋：STM32L1系列（2009）" class="headerlink" title="低功耗先锋：STM32L1系列（2009）"></a>低功耗先锋：STM32L1系列（2009）</h4><ul><li>全球首款超低功耗MCU，采用Cortex-M3内核，休眠电流低至0.3μA，专为电池供电设备（如智能表计）设计。</li></ul><h4 id="性能跃升：STM32F4系列（2011）"><a href="#性能跃升：STM32F4系列（2011）" class="headerlink" title="性能跃升：STM32F4系列（2011）"></a>性能跃升：STM32F4系列（2011）</h4><ul><li>搭载Cortex-M4内核并集成浮点运算单元（FPU），主频达180MHz，适用于电机控制、数字信号处理。</li></ul><h4 id="生态工具：STM32CubeMX（2014）"><a href="#生态工具：STM32CubeMX（2014）" class="headerlink" title="生态工具：STM32CubeMX（2014）"></a>生态工具：STM32CubeMX（2014）</h4><ul><li>2014年ST推出STM32CubeMX，实现图形化配置与代码生成，降低开发门槛。</li></ul><p><strong>技术转折：</strong>STM32F4的FPU使得MCU首次能替代部分DSP功能，成本降低50%以上。</p><hr><h2 id="3-物联网与无线融合：2015-2020年"><a href="#3-物联网与无线融合：2015-2020年" class="headerlink" title="3. 物联网与无线融合：2015-2020年"></a>3. 物联网与无线融合：2015-2020年</h2><h4 id="无线互联：STM32WB与WL系列（2017-2020）"><a href="#无线互联：STM32WB与WL系列（2017-2020）" class="headerlink" title="无线互联：STM32WB与WL系列（2017-2020）"></a>无线互联：STM32WB与WL系列（2017-2020）</h4><ul><li>WB系列：双核架构（Cortex-M4+M0），集成蓝牙5.0和Zigbee，用于智能家居网关。</li><li>WL系列：全球首款内置LoRa的MCU，实现千米级低功耗通信，推动农业物联网普及。</li></ul><h4 id="高性能标杆：STM32H7系列（2016）"><a href="#高性能标杆：STM32H7系列（2016）" class="headerlink" title="高性能标杆：STM32H7系列（2016）"></a>高性能标杆：STM32H7系列（2016）</h4><ul><li>Cortex-M7内核+双精度FPU，主频550MHz，可运行Linux轻量级系统，应用于工业机器视觉。</li></ul><p><strong>行业影响：</strong>2020年，ST凭借STM32WL成为中国LoRa模组市场占有率第一的供应商。</p><hr><h2 id="4-AIoT与边缘计算：2020年至今"><a href="#4-AIoT与边缘计算：2020年至今" class="headerlink" title="4. AIoT与边缘计算：2020年至今"></a>4. AIoT与边缘计算：2020年至今</h2><h4 id="AI加速：STM32MP1系列（2019）"><a href="#AI加速：STM32MP1系列（2019）" class="headerlink" title="AI加速：STM32MP1系列（2019）"></a>AI加速：STM32MP1系列（2019）</h4><ul><li>异构多核设计（Cortex-A7+M4），<strong>支持Linux系统与边缘AI推理</strong>，用于智能零售终端和自动驾驶辅助系统。</li></ul><h4 id="RISC-V架构探索（2024）"><a href="#RISC-V架构探索（2024）" class="headerlink" title="RISC-V架构探索（2024）"></a>RISC-V架构探索（2024）</h4><ul><li>2024年推出实验性产品，开源指令集降低成本，助力国产化替代。</li></ul><p><strong>安全升级：</strong>集成加密引擎（如AES-256）和物理防篡改技术，满足车规级安全标准。2025年，STM32H7+NPU组合已用于无人机实时避障，处理延时从50ms降至1ms。</p><hr><h2 id="5-TM32成功的核心逻辑"><a href="#5-TM32成功的核心逻辑" class="headerlink" title="5. TM32成功的核心逻辑"></a>5. TM32成功的核心逻辑</h2><p><strong>生态闭环：</strong>从硬件（开发板）到软件（HAL库、CubeIDE），ST构建了完整的工具链，覆盖从学生到企业级开发者。</p><p><strong>产品矩阵：</strong>19个系列、超1200款型号，覆盖从0.5美元的STM32G0到30美元的STM32H7，满足全场景需求。</p><p><strong>技术前瞻：</strong>率先押注Cortex-M内核，并持续迭代工艺（180nm→40nm），功耗降低80%。</p>]]></content>
    
    
    
    <tags>
      
      <tag>处理器芯片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>单片机系统中的存储系统</title>
    <link href="/github.io/2025/03/25/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    <url>/github.io/2025/03/25/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="1-只读存储器ROM"><a href="#1-只读存储器ROM" class="headerlink" title="1. 只读存储器ROM"></a>1. 只读存储器ROM</h2><p>ROM的全称是只读存储器，其特性是一旦存储数据就无法再将之改变或删除，通常用在不需经常变更数据的电子或电脑系统中，并且资料不会因为电源关闭而消失。</p><h4 id="（1）ROM（只读存储器）"><a href="#（1）ROM（只读存储器）" class="headerlink" title="（1）ROM（只读存储器）"></a>（1）ROM（只读存储器）</h4><p>在计算机发展的初期，ROM（只读存储器）的功能较为单一，主要用于存储程序。作为电脑启动时运行的首个软件，早期BIOS（基本输入输出系统）仅具备基础功能，只需完成简单的硬件初始化和引导任务，无需频繁更新。</p><h4 id="（2）PROM（可编程只读存储器"><a href="#（2）PROM（可编程只读存储器" class="headerlink" title="（2）PROM（可编程只读存储器)"></a>（2）PROM（可编程只读存储器)</h4><p>PROM，即可编程只读存储器，对PROM写入程序后数据便无法更改。存储的每一位数据都是由熔丝状态决定的。比如当熔丝熔断之后，它代表0，没有熔断代表1。一旦某个存储单元的状态被改变就无法再恢复，这就实现了一次性编程的功能。</p><h4 id="（3）EPROM-抹除可编程只读存储器"><a href="#（3）EPROM-抹除可编程只读存储器" class="headerlink" title="（3）EPROM(抹除可编程只读存储器)"></a>（3）EPROM(抹除可编程只读存储器)</h4><p>EPROM，即可抹除可编程只读存储器。EPROM的存储单元基于浮栅晶体管结构，浮栅上的电荷决定了存储单元的逻辑状态，可以利用高压写入数据，擦除数据的时候需要将芯片曝光于紫外光下一段时间。</p><h4 id="（4）EEPROM-电可擦除可编程只读存储器"><a href="#（4）EEPROM-电可擦除可编程只读存储器" class="headerlink" title="（4）EEPROM(电可擦除可编程只读存储器)"></a>（4）EEPROM(电可擦除可编程只读存储器)</h4><p>EEPROM，是电可擦除可编程只读存储器，其擦除方式使用高压电场，所以在EEPROM芯片内部都设置有电荷泵电路来产生高压。对于一些比较简单的电子产品，它的微控制器里面就内置了EEPROM。</p><h4 id="（5）flash-闪存"><a href="#（5）flash-闪存" class="headerlink" title="（5）flash(闪存)"></a>（5）flash(闪存)</h4><p>后来flash出现了，也就是闪存，无论是nor flash还是nand flash其实都是属于EEPROM的，因为他们本质上是通过电来擦出和写入的。</p><ul><li><p><strong>NAND FLASH</strong>：采用了一种串行的读写方式，即以块为单位进行擦除操作，以页为单位进行编程写入。数据读取时按页进行，适合大量数据的连续读写，广泛应用于固态硬盘（SSD）、U盘、存储卡等大容量存储设备。</p><p>其中固态硬盘（SSD）存储容量可以达到数TB，更适用于需要大容量、高速存储的场景，根据闪存芯片每个cell中所能存储的数据量，分为SLC (Single-Level Cell)、  MLC (Multi-Level Cell)、TLC (Trinary-Level Cell)、QLC (Quad-Level Cell)、PLC。</p></li><li><p><strong>NOR FLASH</strong>：采用了一种并行的读写方式，即数据的读取、写入和擦除操作都可以按字节或字进行，能快速随机访问任意地址的数据，擦除通常以块为单位，但块的大小相对NAND Flash较小，常用于需要快速启动和随机访问代码的设备。</p></li></ul><h4 id="（6）eMMC和UFS"><a href="#（6）eMMC和UFS" class="headerlink" title="（6）eMMC和UFS"></a>（6）eMMC和UFS</h4><ul><li><p>半工况<strong>eMMC</strong> ( Embedded Multi Media Card)</p><p>eMMC是一种集成控制器和存储芯片的存储设备，采用了NAND Flash技术,简单地说，eMMC&#x3D;Nand Flash+控制器+标准封装。与NAND Flash不同的是，eMMC通常具有较小的存储容量，通常在几十GB或几百GB的级别。因此，eMMC适合于移动设备、嵌入式系统和一些消费电子产品等领域的应用。</p></li><li><p>全工况<strong>UFS</strong>（Universal Flash Storage）</p><p>UFS是EMMC的升级版，同样是由多个闪存芯片、主控组成的阵列式存储模块。UFS 弥补了 eMMC 仅支持半双工运行（读写必须分开执行）的缺陷，可以实现全双工运行，所以性能得到翻番,主要用于高端智能手机、平板电脑等移动设备上。</p></li></ul><h4 id="（7）eMCP和uMCP"><a href="#（7）eMCP和uMCP" class="headerlink" title="（7）eMCP和uMCP"></a>（7）eMCP和uMCP</h4><ul><li><p>eMCP&#x3D;eMMC+LPDDR</p><p><strong>eMCP</strong> 是结合 eMMC 和 LPDDR 封装而成的智慧型手机记忆体标准，与传统的 MCP 相较之下，eMCP 因为有内建的 NAND Flash 控制芯片，可以减少主芯片运算的负担，并且管理更大容量的快闪记忆体。</p></li><li><p>uMCP&#x3D;UFS+LPDDR</p><p><strong>uMCP</strong> 是结合了 UFS 和 LPDDR 封装而成的智慧型手机记忆体标准，uMCP 不仅具有高性能和大容量，同时比 P to P +分立式UFS 的解决方案减少存储芯片占用并实现了更灵活的系统设计，并实现智能手机设计的高密度、低功耗存储解决方案。</p></li></ul><hr><h2 id="2-随机访问存储器RAM"><a href="#2-随机访问存储器RAM" class="headerlink" title="2. 随机访问存储器RAM"></a>2. 随机访问存储器RAM</h2><p>RAM是随机存取存储器，在断电之后它所存储的数据就会消失，但是在速度上要远远大于ROM，即使是固态硬盘也不能跟RAM比肩。</p><h4 id="（1）SRAM"><a href="#（1）SRAM" class="headerlink" title="（1）SRAM"></a>（1）SRAM</h4><p><strong>SRAM</strong>是静态RAM，CPU的L1、L2缓存说的就是SRAM，它的信息存储靠的是门电路，这些不需要电容，所以速度上更快，但是由于它存储一位信息需要的晶体管比较多，所以不能大容量集成。</p><p>说到存储器的速度，其实最快的是CPU中的寄存器，它的速度几乎和CPU是一样的。</p><h4 id="（2）DRAM"><a href="#（2）DRAM" class="headerlink" title="（2）DRAM"></a>（2）DRAM</h4><p><strong>DRAM</strong>是动态RAM，就是我们电脑上的内存条，它是靠电容存储信息的，所以需要动态刷新，以此来给电容不停的充电，所以在速度上DRAM就不如SRAM。</p><h4 id="（3）DDR"><a href="#（3）DDR" class="headerlink" title="（3）DDR"></a>（3）DDR</h4><p><strong>DDR</strong>（Double Data Rate）和<strong>LPDDR</strong>（Low Power Double Data Rate）是最常见的内存类型之一，属于易失性存储器，都采用了双倍数据传输率和同步时钟技术，以提高数据传输速度。</p><p>LPDDR内存的功耗较低，适合移动设备和嵌入式系统等需要长时间使用的场景。DDR内存则适用于计算机、服务器和其他高性能计算设备等领域。DDR内存技术已经经历了几代发展，包括DDR、DDR2、DDR3、DDR4和DDR5等，每一代的数据传输速率都有所提高。</p>]]></content>
    
    
    
    <tags>
      
      <tag>存储系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>处理器芯片的派系</title>
    <link href="/github.io/2025/03/23/%E5%A4%84%E7%90%86%E5%99%A8%E8%8A%AF%E7%89%87%E7%9A%84%E6%B4%BE%E7%B3%BB/"/>
    <url>/github.io/2025/03/23/%E5%A4%84%E7%90%86%E5%99%A8%E8%8A%AF%E7%89%87%E7%9A%84%E6%B4%BE%E7%B3%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="1-芯片的结构"><a href="#1-芯片的结构" class="headerlink" title="1. 芯片的结构"></a>1. 芯片的结构</h2><p>当下芯片结构简单划分就三种概念结构：冯.诺依曼结构，哈弗结构和改进哈弗结构。</p><ul><li><h4 id="冯-诺依曼结构"><a href="#冯-诺依曼结构" class="headerlink" title="冯.诺依曼结构"></a>冯.诺依曼结构</h4></li></ul><p> 客户把原始的需求文档（包含输入数据和程序）交给负责记录的人后，根据定义的沟通方式，和负责实际计算的人一起反复来回的传递文档（拿程序指令，拿数据，返结果），最后把计算结果通过记录的人反馈给客户。</p><ul><li><h4 id="哈弗结构"><a href="#哈弗结构" class="headerlink" title="哈弗结构"></a>哈弗结构</h4></li></ul><p>将程序指令和数据分开存储，采用了独立的一组程序总线和一组数据总线。这就相当于原来记录员分了个工，一个就负责记录传递计算方法（程序），一个人就负责记录传递计算内容（数据）。两个人和拨算盘的人点对点沟通，但相互之间老死不往来。</p><ul><li><h4 id="改进哈弗结构"><a href="#改进哈弗结构" class="headerlink" title="改进哈弗结构"></a>改进哈弗结构</h4></li></ul><p>保留了两个独立并行的存储器，只有一组总线供程序存储器和数据存储器分时共用。这就相当于记录员还是为了效率做了分工，但沟通方式升级，把客户和拨算盘的人也加入进来做了个四方沟通会（分时公用）。</p><hr><h2 id="2-芯片的派系"><a href="#2-芯片的派系" class="headerlink" title="2. 芯片的派系"></a>2. 芯片的派系</h2><h4 id="（1）通用芯片"><a href="#（1）通用芯片" class="headerlink" title="（1）通用芯片"></a>（1）通用芯片</h4><p>通用芯片，这意味着其必须具备处理各式各样千奇百怪的指令要求，并且经常同时存在多个外部设备的请求，它必须拥有随时中止目前的运算转而进行其他运算，完成后再从中断点继续当前运算的能力。</p><ul><li><h5 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h5></li></ul><p>CPU虽然有多核，但基本不超过两位数，每个核都有足够大的缓存和足够多的数字和逻辑运算单元，并有更复杂的逻辑判断硬件，就像银行里常备的3-4个柜台的柜员，擅长处理客户很复杂的业务。</p><ul><li><h5 id="MPU"><a href="#MPU" class="headerlink" title="MPU"></a>MPU</h5></li></ul><p>MPU和CPU可以简单理解为一个概念，只是理解范畴上的区别。</p><ul><li><h5 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h5></li></ul><p>GPU的核数远超CPU，每个核拥有的缓存大小相对小，数字逻辑运算单元也少而简单，更像是500多个电话客服柜员，处理一些相对简单但数量众多的客户业务。</p><ul><li><h5 id="DSP"><a href="#DSP" class="headerlink" title="DSP"></a>DSP</h5></li></ul><p>DSP（数字信号处理芯片）是一类特殊的CPU，采用哈佛结构，且存在专用的硬件算法电路和专门的寻址模式。它具有通用芯片设计的灵活性，但在实时运算过程中很少变化，因此特化了业务流程的性能（记录和计算过程）。</p><h4 id="（2）定制芯片"><a href="#（2）定制芯片" class="headerlink" title="（2）定制芯片"></a>（2）定制芯片</h4><p>相比通用芯片，定制芯片是没有“人性”的，就是一个ATM机，其给客户定义了清晰的操作流程，省去了中断等大量灵活性设计。FPGA和ASIC两者核心的区别就是固化程度，区别最大的维度还是成本和功耗。</p><ul><li><h5 id="FPGA"><a href="#FPGA" class="headerlink" title="FPGA"></a>FPGA</h5></li></ul><p>FPGA最早是从专用集成电路发展而来的半定制化的可编程电路，是高端的CPLD (Complex Programmable Logic Device复杂可编程逻辑器件)。FPGA是一堆逻辑门，通过硬件描述语言HDL把它转成电路连接，从最基本的逻辑门层面上连接成电路。</p><ul><li><h5 id="ASIC"><a href="#ASIC" class="headerlink" title="ASIC"></a>ASIC</h5></li></ul><p>ASIC就是专用IC，ASIC原本就是专门为某一项功能开发的专用集成芯片。后来ASIC发展了一些，称为半定制专用集成电路，其代表了在需求一定的情况下，对性价比的极致追求。</p><h4 id="（3）芯片之上的集成"><a href="#（3）芯片之上的集成" class="headerlink" title="（3）芯片之上的集成"></a>（3）芯片之上的集成</h4><ul><li><h5 id="MCU"><a href="#MCU" class="headerlink" title="MCU"></a>MCU</h5></li></ul><p>MCU本身不是一种芯片类型而是一种集成方式，单片机是MCU的通俗说法，经典的51系列就是一堆IO口，后来慢慢的把常用的PWM, AD之类的功能加入了单片机之中。其构成等价于一个带了更多外设CPU，但侧重点是讨论其外设的部分。</p><ul><li><h5 id="ECU"><a href="#ECU" class="headerlink" title="ECU"></a>ECU</h5></li></ul><p>在PWM,AD等之上继续发展其外设也就形成了汽车行业熟悉的ECU（即电子控制单元），同时泛指汽车上所有电子控制系统，可以是转向ECU，空调ECU等。ECU一般由MCU，扩展内存，扩展输入和输出（CAN&#x2F;LIN，AD,PWM等）。</p><ul><li><h5 id="SOC"><a href="#SOC" class="headerlink" title="SOC"></a>SOC</h5></li></ul><p>SOC芯片是ECU的概念进一步升级，更为流行的说法是域控制器，其无外乎就是把MCU变成了SoC（片上系统），同时集成了更多的外围设备而已。在SoC中各种组件（IP核）采用类似搭积木的方法组合在一起，做成不同的SoC芯片。</p><hr><h2 id="3-软硬件的匹配设计"><a href="#3-软硬件的匹配设计" class="headerlink" title="3. 软硬件的匹配设计"></a>3. 软硬件的匹配设计</h2><p>算法的性能与硬件设计往往脱离不开，软硬件一起考虑往往才能充分利用好系统性能。不同的芯片，不同的算法和需求，往往有最优的组合方式。</p>]]></content>
    
    
    
    <tags>
      
      <tag>处理器芯片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ARM处理器脉络</title>
    <link href="/github.io/2025/02/23/ARM%E5%A4%84%E7%90%86%E5%99%A8%E8%84%89%E7%BB%9C/"/>
    <url>/github.io/2025/02/23/ARM%E5%A4%84%E7%90%86%E5%99%A8%E8%84%89%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="1-ARM处理器产品线"><a href="#1-ARM处理器产品线" class="headerlink" title="1. ARM处理器产品线"></a>1. ARM处理器产品线</h2><p>ARM处理器现在产品线主要有Cortex-A、Cortex-R、Cortex-M、SecureCore、Neoverse等</p><table><thead><tr><th></th><th align="center">定位</th><th>ARMv4</th><th>ARMv5</th><th>ARMv6</th><th>ARMv7</th><th>ARMv8</th></tr></thead><tbody><tr><td></td><td align="center"></td><td>7TDM 920T</td><td>968ES 946ES 926EJS</td><td></td><td></td><td></td></tr><tr><td><strong>Cortex-A</strong></td><td align="center">应用处理器</td><td></td><td></td><td>1136&#x2F;1176</td><td>A5&#x2F;A8&#x2F;A15</td><td>A35&#x2F;A55&#x2F;A72&#x2F;A75</td></tr><tr><td><strong>Cortex-R</strong></td><td align="center">实时处理器</td><td></td><td></td><td>1156T2</td><td>R8&#x2F;R7R5&#x2F;R4</td><td>R52</td></tr><tr><td><strong>Cortex-M</strong></td><td align="center">微控制器</td><td></td><td></td><td>M0&#x2F;M0+</td><td>M7&#x2F;M4&#x2F;M3</td><td>M33&#x2F;M23</td></tr></tbody></table><p><strong>SecureCore</strong>，基于ARM-M架构，增强了嵌入式安全，主要有SC000和SC300，分别基于Cortex-M0 (v6-M)和Cortex-M3(v7-M)。</p><p><strong>Neoverse</strong>（服务器端），面向云端到边缘的HPC、AI&#x2F;ML加速等领域，是Cortex之外的另一条面向服务器和基础设施设备的核心IP。如初代发布即收获不错市场反响的Neoverse N1核心IP，亚马逊Graviton2、Ampere Altra是基于IP设计的产品。</p><hr><h2 id="2-Cortex-A处理器发展脉络"><a href="#2-Cortex-A处理器发展脉络" class="headerlink" title="2. Cortex-A处理器发展脉络"></a>2. Cortex-A处理器发展脉络</h2><p>Cortex-A系列处理器目前主要有超低功耗核、小核、大核、超大核4个系列</p><table><thead><tr><th align="center">超低功耗</th><th align="center">超低功耗</th><th align="center">大核</th><th align="center">A8(2005)</th><th align="center">超大核</th><th align="center">小核</th><th align="center">未演进</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A9(2007)</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center">A5(2009)</td><td align="center"></td><td align="center">A15(2010)</td><td align="center"></td><td align="center">A7(2011)</td><td align="center">A12(2013)</td></tr><tr><td align="center"></td><td align="center">A35(2015)</td><td align="center"></td><td align="center">A57(2012)</td><td align="center"></td><td align="center">A53(2015)</td><td align="center">A17(2014)</td></tr><tr><td align="center">A32(2016)</td><td align="center">A34(2019)</td><td align="center"></td><td align="center">A72(2015)</td><td align="center"></td><td align="center">A55(2017)</td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A73(2016)</td><td align="center"></td><td align="center">A510(2021)</td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A75(2017)</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A76(2018)</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A77(2019)</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center">A78(2020)</td><td align="center"></td><td align="center">X1(2020)</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center">A710(2021)</td><td align="center"></td><td align="center">X2(2021)</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center">A715(2022)</td><td align="center"></td><td align="center">X3(2022)</td><td align="center"></td><td align="center"></td></tr></tbody></table><ol><li>作为<strong>超低功耗</strong>的处理器：ARMv7架构的A5和A7，ARMv8架构的A35、A32和A34；</li><li>作为<strong>小核</strong>的处理器有：ARMv7架构的A8和A9，ARMv8架构的A53和A55，以及ARMv9架构的A510；</li><li>作为<strong>大核</strong>的处理器有：ARMv7架构的A15和A17，ARMv8架构的A57、A72、A73、A75、A76、A77和A78，以及ARMv9架构的A710和A715；</li><li>作为<strong>超大核</strong>的处理器有：ARMv8架构的X1，以及ARMv9架构的X2和X3；</li></ol><table><thead><tr><th align="center">时间</th><th align="center">2005-2014</th><th align="center">2012</th><th align="center">2015</th><th align="center">2016</th><th align="center">2017</th><th align="center">2018</th><th align="center">2019</th><th align="center">2020</th><th align="center">2021</th><th align="center">2022</th></tr></thead><tbody><tr><td align="center">超大核</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">X1</td><td align="center">X2</td><td align="center">X3</td></tr><tr><td align="center">大核</td><td align="center">A15  A17</td><td align="center">A57</td><td align="center">A72</td><td align="center">A73</td><td align="center">A75</td><td align="center">A76</td><td align="center">A77</td><td align="center">A78</td><td align="center">A710</td><td align="center">A715</td></tr><tr><td align="center">小核</td><td align="center">A8  A9</td><td align="center">A53</td><td align="center"></td><td align="center"></td><td align="center">A55</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">A510</td><td align="center"></td></tr><tr><td align="center">超低功耗</td><td align="center">A5  A7</td><td align="center"></td><td align="center">A35</td><td align="center">A32</td><td align="center"></td><td align="center"></td><td align="center">A34</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>处理器芯片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑主板尺寸分类</title>
    <link href="/github.io/2025/02/12/%E7%94%B5%E8%84%91%E4%B8%BB%E6%9D%BF%E5%B0%BA%E5%AF%B8%E5%88%86%E7%B1%BB/"/>
    <url>/github.io/2025/02/12/%E7%94%B5%E8%84%91%E4%B8%BB%E6%9D%BF%E5%B0%BA%E5%AF%B8%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>在市场上有许多类型的主板，包括ATX、MicroATX、Mini-ITX、服务器主板、工作站主板、嵌入式主板等。它们在尺寸、扩展插槽、性能、功能等方面存在着区别。不同类型的主板在尺寸、扩展插槽、性能、功能等方面存在着不同的区别，以满足不同用户的需求。</p><h2 id="1-早期主板"><a href="#1-早期主板" class="headerlink" title="1. 早期主板"></a>1. 早期主板</h2><table><thead><tr><th align="center">版型</th><th align="center">尺寸</th><th align="center">接口</th><th align="center">时间</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">AT</td><td align="center">305mm*279-330mm</td><td align="center">集成控制芯片和8个I&#x2F;O扩充插槽</td><td align="center">1984年</td><td align="center">用于ISA总线类型的扩展卡</td></tr><tr><td align="center">Baby-AT</td><td align="center">220mm*330mm</td><td align="center"></td><td align="center">1985年</td><td align="center"></td></tr><tr><td align="center">L</td><td align="center">13 英寸 x 9 英寸</td><td align="center"></td><td align="center">1987年</td><td align="center"></td></tr><tr><td align="center">NLX</td><td align="center"></td><td align="center"></td><td align="center">1997年</td><td align="center"></td></tr></tbody></table><h2 id="2-超大板E-ATX型"><a href="#2-超大板E-ATX型" class="headerlink" title="2. 超大板E-ATX型"></a>2. 超大板E-ATX型</h2><p>高性能主板，芯片组都是X字母开头，适合使用带X后缀的处理器，但是价格很高，不推荐普通用户使用。</p><table><thead><tr><th align="center">版型</th><th align="center">尺寸</th><th align="center">接口</th><th align="center">时间</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">WTX</td><td align="center">356mm*425mm</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">HPTX</td><td align="center">354mm*381mm</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">EE-ATX</td><td align="center">347mm*330mm</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">E-ATX</td><td align="center">305mm*330mm（12英寸×13英寸）</td><td align="center">4-8个 PCI-E x16*</td><td align="center">2020年</td><td align="center">主要用于高性能PC整机、入门式工作站等领域</td></tr></tbody></table><h2 id="3-大板-ATX型"><a href="#3-大板-ATX型" class="headerlink" title="3. 大板 ATX型"></a>3. 大板 ATX型</h2><p>大板，扩展性好，接口全，一般内存都是四插槽起，2或3个PCIe接口和M.2接口。</p><table><thead><tr><th align="center">版型</th><th align="center">尺寸</th><th align="center">接口</th><th align="center">时间</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">XL-ATX</td><td align="center">343mm*262mm</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ATX</td><td align="center">305mm*244mm（12英寸×9.6英寸）</td><td align="center">扩展插槽数量丰富，包括3-4 个 PCI-E x16和1个 PCI-E x1、PCI插槽、RAM插槽和SATA接口等</td><td align="center">1995年</td><td align="center">较高的功耗</td></tr><tr><td align="center">BTX</td><td align="center">325mm×266mm</td><td align="center"></td><td align="center">2005年</td><td align="center"></td></tr><tr><td align="center">Mini-ATX</td><td align="center">284mm*208mm</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="4-小板-MATX型"><a href="#4-小板-MATX型" class="headerlink" title="4. 小板 MATX型"></a>4. 小板 MATX型</h2><p>小板，主流的主板版型，内存插槽一般是两个或者四个，会有一个M.2接口，扩展性虽然不高，但是绝对可以满足大多数用户的需求。</p><table><thead><tr><th align="center">版型</th><th align="center">尺寸</th><th align="center">接口</th><th align="center">时间</th><th>备注</th></tr></thead><tbody><tr><td align="center">Micro-BTX</td><td align="center">264mm×267mm</td><td align="center"></td><td align="center">2005年</td><td></td></tr><tr><td align="center">Micro-ATX</td><td align="center">244mm*244mm（9.6英寸×9.6英寸）</td><td align="center">扩展插槽数量少，2 个 PCI-E x16和1个 PCI-E x1</td><td align="center"></td><td>兼容ATX的接口</td></tr><tr><td align="center">uATX</td><td align="center">244mm*185mm</td><td align="center"></td><td align="center"></td><td></td></tr><tr><td align="center">FlexATX</td><td align="center">229mm*191mm</td><td align="center"></td><td align="center"></td><td></td></tr></tbody></table><h2 id="5-迷你板-ITX型"><a href="#5-迷你板-ITX型" class="headerlink" title="5. 迷你板 ITX型"></a>5. 迷你板 ITX型</h2><p>迷你主板，接口数量属于刚好够用，适合ITX迷你机箱，一般用来办公或者家用，不适合做游戏主机。</p><table><thead><tr><th align="center">版型</th><th align="center">尺寸</th><th align="center">接口</th><th align="center">时间</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">ITX</td><td align="center">170mm*170mm（6.7英寸×6.7英寸）</td><td align="center">1个PCI-E x16和1个 mini PCI-E</td><td align="center"></td><td align="center">电源要用SFX规格甚1U电源</td></tr><tr><td align="center">Nano-ITX</td><td align="center"></td><td align="center"></td><td align="center">2003年</td><td align="center"></td></tr><tr><td align="center">Pico-ITX</td><td align="center"></td><td align="center"></td><td align="center">2007年</td><td align="center"></td></tr><tr><td align="center">Thin-ITX</td><td align="center">170mm*170mm（缩减厚度）</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Mini-SFX</td><td align="center">147mm x 140mm</td><td align="center"></td><td align="center">2015年</td><td align="center"></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>电脑主板</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Wi-Fi 标准和类型变迁</title>
    <link href="/github.io/2025/02/11/Wi-Fi%20%E6%A0%87%E5%87%86%E5%92%8C%E7%B1%BB%E5%9E%8B%E5%8F%98%E8%BF%81/"/>
    <url>/github.io/2025/02/11/Wi-Fi%20%E6%A0%87%E5%87%86%E5%92%8C%E7%B1%BB%E5%9E%8B%E5%8F%98%E8%BF%81/</url>
    
    <content type="html"><![CDATA[<p>Wi-Fi，在中文里又称作“移动热点”，是Wi-Fi联盟制造商的商标作为产品的品牌认证，是基于IEEE 802.11标准的无线局域网通信技术 。</p><table><thead><tr><th align="center">IEEE标准</th><th align="center">WI-FI版本</th><th align="center">频段</th><th align="center">最大数据速率</th><th align="center">PHY技术</th><th align="center">调制方式</th><th align="center">空间流数</th><th align="center">信道带宽</th><th align="center">发布时间</th></tr></thead><tbody><tr><td align="center">IEEE 802.11-1997</td><td align="center">WiFi 0</td><td align="center">2.4GHz</td><td align="center">2Mbps</td><td align="center">DSSS</td><td align="center">BPSK, QPSK</td><td align="center">1</td><td align="center">20MHz</td><td align="center">1997年</td></tr><tr><td align="center">IEEE 802.11b</td><td align="center">WiFi 1</td><td align="center">2.4GHz</td><td align="center">11Mbps</td><td align="center">DSSS</td><td align="center">QPSK, CCK</td><td align="center">1</td><td align="center">20MHz</td><td align="center">1999年</td></tr><tr><td align="center">IEEE 802.11a</td><td align="center">WiFi 2</td><td align="center">5GHz</td><td align="center">54Mbps</td><td align="center">OFDM</td><td align="center">BPSK, QPSK, 16-QAM</td><td align="center">1</td><td align="center">20MHz</td><td align="center">1999年</td></tr><tr><td align="center">IEEE 802.11g</td><td align="center">WiFi 3</td><td align="center">2.4GHz</td><td align="center">54Mbps</td><td align="center">OFDM</td><td align="center">BPSK, QPSK, CCK, 16-QAM</td><td align="center">1</td><td align="center">20MHz</td><td align="center">2003年</td></tr><tr><td align="center">IEEE 802.11n</td><td align="center">WiFi 4</td><td align="center">2.4GHz、5GHz</td><td align="center">600Mbps</td><td align="center">MIMO-OFDM</td><td align="center">BPSK, QPSK, 16-QAM</td><td align="center">1-4</td><td align="center">20MHz、40MHz</td><td align="center">2009年</td></tr><tr><td align="center">IEEE 802.11ac</td><td align="center">WiFi 5</td><td align="center">5GHz</td><td align="center">3.47Gbps</td><td align="center">MIMO-OFDM</td><td align="center">BPSK, QPSK, 16-QAM</td><td align="center">1-8</td><td align="center">20MHz、40MHz、80MHz、160MHz</td><td align="center">2013年</td></tr><tr><td align="center">IEEE 802.11ax</td><td align="center">WiFi 6</td><td align="center">2.4GHz、5GHz</td><td align="center">9.6Gbps</td><td align="center">OFDMA, MU-MIMO</td><td align="center">BPSK, QPSK, 16-QAM</td><td align="center">1-8</td><td align="center">20MHz、40MHz、80MHz、160MHz</td><td align="center">2019年</td></tr><tr><td align="center">IEEE 802.11ax -2021</td><td align="center">WiFi 6E扩展</td><td align="center">6GHz</td><td align="center">同上</td><td align="center">同上</td><td align="center">同上</td><td align="center">同上</td><td align="center">同上</td><td align="center">2021年</td></tr><tr><td align="center">IEEE 802.11be</td><td align="center">WiFi 7</td><td align="center">2.4GHz、5GHz、6GHz</td><td align="center">46Gbps</td><td align="center">OFDMA, MU-MIMO</td><td align="center">4096-QAM</td><td align="center">1-8</td><td align="center">20MHz、40MHz、80MHz、160MHz、320MHz</td><td align="center">2024年</td></tr></tbody></table><p>注：<strong>WLAN</strong>的全称是Wireless Local Area Network，中文含义是无线局域网。WLAN广义上讲是以各种无线电波（如激光、红外线等）的无线信道来代替有线局域网中的部分或全部传输介质所构成的网络。在WLAN的演进和发展过程中，其实现技术标准有很多，如蓝牙、Wi-Fi、HyperLAN2等。简单来说就是，WLAN是一个网络系统，而Wi-Fi是这个网络系统中的一种技术。</p>]]></content>
    
    
    
    <tags>
      
      <tag>WI-FI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派版本变迁与差异</title>
    <link href="/github.io/2025/02/10/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%89%88%E6%9C%AC%E5%8F%98%E8%BF%81%E4%B8%8E%E5%B7%AE%E5%BC%82/"/>
    <url>/github.io/2025/02/10/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%89%88%E6%9C%AC%E5%8F%98%E8%BF%81%E4%B8%8E%E5%B7%AE%E5%BC%82/</url>
    
    <content type="html"><![CDATA[<p>树莓派（Raspberry Pi）是一款广受欢迎的单板计算机，由英国的Raspberry Pi基金会开发。它的初衷是为了促进计算机科学教育，但由于其强大的功能和低廉的价格，迅速在全球范围内得到了广泛应用。</p><hr><table><thead><tr><th>型号</th><th align="center">芯片</th><th align="center">CPU</th><th align="center">频率</th><th align="center">内存</th><th align="center">发布时间</th></tr></thead><tbody><tr><td>树莓派A型（未发售）</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">256MB</td><td align="center">未发售</td></tr><tr><td>树莓派B型（第一代）</td><td align="center">Broadcom BCM2835</td><td align="center">ARM1176JZF-S</td><td align="center">700 MHz</td><td align="center">512MB</td><td align="center">2012年9月</td></tr><tr><td>树莓派B+型（第一代改进版）</td><td align="center">Broadcom BCM2835</td><td align="center">ARM1176JZF-S</td><td align="center">700 MHz</td><td align="center">512MB</td><td align="center">2014年7月</td></tr><tr><td>树莓派A+型（第一代低规格版）</td><td align="center">Broadcom BCM2835</td><td align="center">ARM1176JZF-S</td><td align="center">700 MHz</td><td align="center">256MB（后增至512MB）</td><td align="center">2014年11月</td></tr><tr><td>树莓派2B型（第二代）</td><td align="center">Broadcom BCM2836&#x2F;7</td><td align="center">四核ARM Cortex-A7</td><td align="center">900 MHz</td><td align="center">1GB</td><td align="center">2015年2月</td></tr><tr><td>树莓派Zero</td><td align="center">Broadcom BCM2835</td><td align="center">ARM11</td><td align="center">1 GHz</td><td align="center">512MB</td><td align="center">2015年11月</td></tr><tr><td>树莓派3B型（第三代）</td><td align="center">Broadcom BCM2837</td><td align="center">四核ARM Cortex-A53</td><td align="center">1.2 GHz</td><td align="center">1GB、2GB、4GB可选</td><td align="center">2016年2月</td></tr><tr><td>树莓派Zero W</td><td align="center">Broadcom BCM2835</td><td align="center">ARM11</td><td align="center">1 GHz</td><td align="center">512MB</td><td align="center">2017年2月</td></tr><tr><td>树莓派3B+型（第三代改进版）</td><td align="center">Broadcom BCM2837B0</td><td align="center">四核ARM Cortex-A53</td><td align="center">1.4 GHz</td><td align="center">1GB、2GB、4GB可选</td><td align="center">2018年3月</td></tr><tr><td>树莓派3A+型（第三代低规格版）</td><td align="center">Broadcom BCM2837B0</td><td align="center">四核ARM Cortex-A53</td><td align="center">1.4 GHz</td><td align="center">512MB</td><td align="center">2018年11月</td></tr><tr><td>树莓派4B型（第四代）</td><td align="center">Broadcom BCM2711</td><td align="center">四核ARM Cortex-A72</td><td align="center">1.5 GHz</td><td align="center">1GB、2GB、4GB、8GB可选</td><td align="center">2019年6月</td></tr><tr><td>树莓派400（第四代一体机）</td><td align="center">Broadcom BCM2711</td><td align="center">四核ARM Cortex-A72</td><td align="center">1.8 GHz</td><td align="center">4GB</td><td align="center">2020年11月</td></tr><tr><td>树莓派Pico</td><td align="center">Raspberry Pi RP2040</td><td align="center">双核ARM Cortex-M0+</td><td align="center">133 MHz</td><td align="center">264KB SRAM</td><td align="center">2021年1月</td></tr><tr><td>树莓派5（第五代）</td><td align="center">Broadcom BCM2712</td><td align="center">四核ARM Cortex-A76</td><td align="center">2.4 GHz</td><td align="center">4GB、8GB可选</td><td align="center">2023年9月</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>开发板</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>耕海纪</title>
    <link href="/github.io/2023/04/01/%E8%80%95%E6%B5%B7%E7%BA%AA/"/>
    <url>/github.io/2023/04/01/%E8%80%95%E6%B5%B7%E7%BA%AA/</url>
    
    <content type="html"><![CDATA[<p>按照惯例，hello，world！</p><p>本站没有主题，博主随性而为，所以没有期待、没有纠结、随时断更。</p><p>关于博客名字“耕海纪”：其中耕取自“耕读传家久，诗书继世长”之意，耕作劳动是自古以来中国人日常生活的重要内容，是我们祖祖辈辈赖以生存的方式，老一辈人面朝黄土背朝天，农耕之苦与新时代我辈之苦通之。海，天池也。以纳百川者。浩瀚无际的海洋往往象征着无限、未知、深不可测。 海洋的巨大深度和不断变化的性质反映着宇宙的浩瀚和地表之下的奥秘，海洋赋予生命的特性使其与出生、重生和生命本身的原始本质的主题相一致。</p><p>所以，说到这里啦！</p>]]></content>
    
    
    
    <tags>
      
      <tag>释义</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>出海&amp;入海</title>
    <link href="/github.io/2022/05/27/%E5%87%BA%E6%B5%B7&amp;%E5%85%A5%E6%B5%B7/"/>
    <url>/github.io/2022/05/27/%E5%87%BA%E6%B5%B7&amp;%E5%85%A5%E6%B5%B7/</url>
    
    <content type="html"><![CDATA[<p>从来系日乏长绳，水去云回恨不胜，时间仿佛还停留在那个百川入海的夏末。在海大园求学的八年里，得遇良师益友，所遇皆是恩赐。研究生学习生涯看似寻常最奇崛，诚如容易却艰辛。黔川归来后的三年里，见过凌晨四点的海大校园，体验过最长的寒暑假期，感受过实验室40℃的夏天，收获过文章见刊后的喜悦。回首走过的路，进取点点星铺路，步履稳踏自茫茫。</p><p>情深不言语，尽在不言中。读书以来一直庆幸自己轻松的家庭氛围，充分发挥了“散养模式”的优势.感恩父亲的历来严厉，但从不苛求；感恩母亲的向来随性，从不插手我的选择；感恩姐姐姐夫的默默支持，习惯于我任性的臭脾气，还有赵沛姝小朋友带来的欢乐。</p><p>情深而墨浅，谊重而言拙。恩师穆为磊，一日程门立雪，终身以心相敬。师兄曲文声、师兄邹振兴、师兄孙建刚、师兄李攻博、师兄杜博文、师兄韩锟、同门孙琦帅、同门王丰丰、师弟高宇清、师弟赵发杰、师妹李梦娇、师弟宁昊、师弟陈尔东，追梦之路，幸而同行，愿诸君安好，诸事顺遂。</p><p>研途百味，各有不同。感谢海洋机电装备与技术研究室，感谢实验室刘贵杰教授、谢迎春教授、田晓洁副教授、冷鼎鑫副教授和王弘晖副教授的厚爱，感谢实验室小伙伴们的成长陪伴，无论时光流转距离改变，感情永远在那片海。</p><p>所有过往，皆为序章。最后写给自己的话，青年人归根结底要活在自己喜欢的事业追求中，其实大多数时候，感人的未必是事迹，而是我们从相似的故事里看到自己曾经的热情与真挚。</p><p>松岭路238 号，再见。</p><p align="right">2022年5月27日</p><p align="right">于工程楼1210房间</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>致谢青春，再见海大</title>
    <link href="/github.io/2018/05/20/%E8%87%B4%E8%B0%A2%E9%9D%92%E6%98%A5%EF%BC%8C%E5%86%8D%E8%A7%81%E6%B5%B7%E5%A4%A7/"/>
    <url>/github.io/2018/05/20/%E8%87%B4%E8%B0%A2%E9%9D%92%E6%98%A5%EF%BC%8C%E5%86%8D%E8%A7%81%E6%B5%B7%E5%A4%A7/</url>
    
    <content type="html"><![CDATA[<p>蒲月琴岛，鲜荷摇碧，老苔积青。竭思苦虑拙作良久，不求一鸣惊人，惟图学业功成。虽理浅拙，然吾兢业之心，鉴于日月。值吾文稿近余之际，忆往昔，四载春秋，白驹过隙，虽所学不精，亦觉受益良多。</p><p>鄙非感伤溅泪之士，而今回首，亦未免五味杂陈。癸巳仲夏，初入学塾，载怯载欣，志硕学宏才，欲求索济国。然今日三省吾身，虽才本疏浅，亦不负四年之志。东方学府，书山浩浩，学海淼淼。常秉烛求索兮，恐有负重托。学在海大，拥旖旎于身畔，曾五子顶揽风，亦八关山读月，锦瑟年华，春花秋月共赏。每每念及海大时光，不负青春与梦想。</p><p>行文至此，宜拜谢众人，然欲语忘言。一谢父母，身体发肤授之父母，十月怀胎恩情深，卧冰求鲤报恩轻。二谢穆师，儒雅谦和，睿智博学，师生融融，此诚吾生之大幸也。三谢师兄文声、建刚，亦友亦师，予余之助，不胜感激。四谢同窗，四五同窗，风华正茂，青春岁月，各具豪肠。或歌或舞，莫诉离殇。五谢吾之坚持，虽不才愚钝，然持之以恒。所学艰深，吾终有一二之所得。</p><p>恩情深而笔墨浅，情谊重而言语拙。情长意深，一语难诉，惟寄情于心间。不忘父母恩，铭记恩师情，常忆同窗谊，无语可概此深情，再拜谢！</p><p align="right">2018年5月20日</p><p align="right">于工程楼2#205</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
